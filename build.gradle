#!groovy
// The above triggers groovy syntax highlighting in vim

plugins {
  id "com.gradle.plugin-publish" version "0.9.9"
  // Eat your own dog food :)
  id "org.sonarqube" version "2.7"
  id "com.jfrog.artifactory" version "4.5.4"
  id "com.github.hierynomus.license" version "0.14.0"
  id "net.researchgate.release" version "2.6.0"
  id "com.jfrog.bintray" version "1.7.3"
  
}

apply plugin: 'java-gradle-plugin'
apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'groovy'
apply plugin: 'maven'
apply plugin: 'maven-publish'


group = 'org.sonarsource.scanner.gradle'
description = 'Gradle plugin to help analyzing projects with SonarQube'
def projectName = 'SonarQube Scanner for Gradle'
def docUrl = 'http://redirect.sonarsource.com/doc/gradle.html'
def githubUrl = 'https://github.com/SonarSource/sonar-scanner-gradle'

sourceCompatibility = 1.8
targetCompatibility = 1.8

compileJava {
  options.encoding = 'UTF-8'
}

javadoc {
  options.encoding = 'UTF-8'
}

ext {
  buildNumber = System.getProperty("buildNumber")
}
// Replaces the version defined in sources, usually x.y-SNAPSHOT, by a version identifying the build.
if (version.endsWith('-SNAPSHOT') && ext.buildNumber != null) {
  def versionSuffix = (version.toString().count('.') == 1 ? ".0.${ext.buildNumber}" : ".${ext.buildNumber}")
  version = version.replace('-SNAPSHOT', versionSuffix)
}

repositories {
  jcenter()
  mavenLocal()
  mavenCentral()
  maven {
    url "https://maven.google.com"
  }
  maven {
    url "https://repox.sonarsource.com/sonarsource"
  }
}

dependencies {
  compile gradleApi()
  compile 'org.sonarsource.scanner.api:sonar-scanner-api:2.12.0.1661'
  compileOnly 'com.android.tools.build:gradle:3.1.0'
  compileOnly 'com.google.code.findbugs:jsr305:3.0.2'
  testCompile localGroovy()
  testCompile 'junit:junit:4.12'
  testCompile 'org.hamcrest:hamcrest-all:1.3'
  testCompile('org.spockframework:spock-core:1.1-groovy-2.4') {
    exclude module : 'groovy-all'
  }
}

pluginBundle {
  website = docUrl
  vcsUrl = githubUrl

  description = project.description
  tags = ['sonarqube', 'sonar', 'quality', 'qa']

  plugins {

    sonarqubePlugin {
      id = 'org.sonarqube'
      displayName = projectName
    }
  }

  mavenCoordinates {
    groupId = project.group
    artifactId = "sonarqube-gradle-plugin"
  }
}

sonarqube {
  properties {
    property 'sonar.projectName', projectName
  }
}

license {
  strictCheck true
  exclude "**/version.txt"
}

jacoco {
  toolVersion = "0.8.1"
}

// Add required informations to deploy on central
install {
  repositories.mavenInstaller {
    pom.project {
      name projectName
      description project.description
      url docUrl
      organization {
        name 'SonarSource'
        url 'http://www.sonarsource.com'
      }
      licenses {
        license {
          name 'GNU LGPL 3'
          url 'http://www.gnu.org/licenses/lgpl.txt'
          distribution 'repo'
        }
      }
      scm {
        url githubUrl
      }
      developers {
        developer {
          id 'henryju'
          name 'Julien Henry'
        }
      }
    }
  }
}

artifactory {
  clientConfig.setIncludeEnvVars(true)
  clientConfig.setEnvVarsExcludePatterns('*password*,*PASSWORD*,*secret*,*MAVEN_CMD_LINE_ARGS*,sun.java.command,*token*,*TOKEN*,*LOGIN*,*login*')
  contextUrl = System.getenv('ARTIFACTORY_URL')
  publish {    
    repository {
      repoKey = System.getenv('ARTIFACTORY_DEPLOY_REPO')
      username = System.getenv('ARTIFACTORY_DEPLOY_USERNAME')
      password = System.getenv('ARTIFACTORY_DEPLOY_PASSWORD')      
    }
    defaults {
      properties = [
        'build.name': 'sonar-scanner-gradle',
        'build.number': System.getenv('BUILD_NUMBER'),
        'pr.branch.target': System.getenv('PULL_REQUEST_BRANCH_TARGET'),
        'pr.number': System.getenv('PULL_REQUEST_NUMBER'),
        'vcs.branch': System.getenv('GIT_BRANCH'),
        'vcs.revision': System.getenv('GIT_COMMIT'),
        'version': version
      ]
      publishConfigs('archives', 'published')
      publishPom = true // Publish generated POM files to Artifactory (true by default)
      publishIvy = false // Publish generated Ivy descriptor files to Artifactory (true by default)
    }
  }
  clientConfig.info.setBuildName('sonar-scanner-gradle')
  clientConfig.info.setBuildNumber(System.getenv('BUILD_NUMBER'))
  // The name of this variable is important because it's used by the delivery process when extracting version from Artifactory build info.
  clientConfig.info.addEnvironmentProperty('PROJECT_VERSION', "${version}")
}

bintray {
  user = System.getenv('BINTRAY_USER')
  key = System.getenv('BINTRAY_KEY')
  pkg {
    repo = 'SonarQube'
    name = project.group
    userOrg = 'sonarsource'
    version {
      name = project.version
      desc = "${project.description} ${project.version}"
      released  = new Date()
      vcsTag = project.version
    }
    configurations = ['archives']
  }
}

publishPlugins.dependsOn bintrayUpload
afterReleaseBuild.dependsOn publishPlugins

processResources {
  filesMatching('**/version.txt') {
    expand version: project.version
  }
}


